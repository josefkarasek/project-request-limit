
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.openshift.api.project.v1;

import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1";

// Projects are the unit of isolation and collaboration in OpenShift. A project has one or more members,
// a quota on the resources that the project may consume, and the security controls on the resources in
// the project. Within a project, members may have different roles - project administrators can set
// membership, editors can create and manage the resources, and viewers can see but not access running
// containers. In a normal cluster project administrators are not able to alter their quotas - that is
// restricted to cluster administrators.
//
// Listing or watching projects will return only projects the user has the reader role on.
//
// An OpenShift project is an alternative representation of a Kubernetes namespace. Projects are exposed
// as editable to end users while namespaces are not. Direct creation of a project is typically restricted
// to administrators, while end users should use the requestproject resource.
//
// Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
// +openshift:compatibility-gen:level=1
message Project {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec defines the behavior of the Namespace.
  optional ProjectSpec spec = 2;

  // Status describes the current status of a Namespace
  // +optional
  optional ProjectStatus status = 3;
}

// ProjectLimitBySelector specifies the maximum number of projects allowed for a given user label selector
message ProjectLimitBySelector {
  // Selector is a user label selector. An empty selector selects everything.
  map<string, string> selector = 1;

  // MaxProjects is the number of projects allowed for this class of users. If MaxProjects is nil,
  // there is no limit to the number of projects users can request. An unlimited number of projects
  // is useful in the case a limit is specified as the default for all users and only users with a
  // specific set of labels should be allowed unlimited project creation.
  optional int64 maxProjects = 2;
}

// ProjectList is a list of Project objects.
//
// Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
// +openshift:compatibility-gen:level=1
message ProjectList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is the list of projects
  repeated Project items = 2;
}

// ProjectRequest is the set of options necessary to fully qualify a project request
//
// Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
// +openshift:compatibility-gen:level=1
message ProjectRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // DisplayName is the display name to apply to a project
  optional string displayName = 2;

  // Description is the description to apply to a project
  optional string description = 3;
}

// ProjectRequestLimit is the configuration for the project request limit plug-in
// It contains an ordered list of limits based on user label selectors. Selectors will
// be checked in order and the first one that applies will be used as the limit.
//
// Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
// +openshift:compatibility-gen:level=1
message ProjectRequestLimit {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  repeated ProjectLimitBySelector limits = 2;

  // MaxProjectsForSystemUsers controls how many projects a certificate user may have.  Certificate
  // users do not have any labels associated with them for more fine grained control
  optional int64 maxProjectsForSystemUsers = 3;

  // MaxProjectsForServiceAccounts controls how many projects a service account may have.  Service
  // accounts can't create projects by default, but if they are allowed to create projects, you cannot
  // trust any labels placed on them since project editors can manipulate those labels
  optional int64 maxProjectsForServiceAccounts = 4;
}

// ProjectRequestLimitList is a list of ProjectRequestLimit objects.
//
// Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
// +openshift:compatibility-gen:level=1
message ProjectRequestLimitList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is the list of projectrequestlimits
  repeated ProjectRequestLimit items = 2;
}

// ProjectSpec describes the attributes on a Project
message ProjectSpec {
  // Finalizers is an opaque list of values that must be empty to permanently remove object from storage
  repeated string finalizers = 1;
}

// ProjectStatus is information about the current status of a Project
message ProjectStatus {
  // Phase is the current lifecycle phase of the project
  // +optional
  optional string phase = 1;

  // Represents the latest available observations of the project current state.
  // +optional
  // +patchMergeKey=type
  // +patchStrategy=merge
  repeated k8s.io.api.core.v1.NamespaceCondition conditions = 2;
}

